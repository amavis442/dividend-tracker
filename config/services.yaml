# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    .container.dumper.inline_factories: true
    documents_directory: '%kernel.project_dir%/public/uploads/documents'
    app.path.research_attachments: /uploads/documents
    app.dividend.tax: 0.15
    app.dividend.exchangerate: 1.19
    app.max_per_page: 10
    app.supported_locales: 'en|nl'
    dividend.financial_modeling_prep_api_key: '%env(FINANCIALMODELINGPREP_API_KEY)%'
    app.incomesshares: '%env(INCOMESSHARES)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # Listeners
    on_request_listener:
        class: App\EventListener\OnRequestListener
        arguments: ['@doctrine.orm.entity_manager', '@security.token_storage']
        tags:
            - {
                  name: kernel.event_listener,
                  event: kernel.request,
                  method: onKernelRequest,
              }

    # Setup alias for the ExchangeRateInterface so autowire understand it
    App\Service\ExchangeRate\EuExchangeRateService: ~
    App\Service\ExchangeRate\ExchangeRateInterface: '@App\Service\ExchangeRate\WisselkoersNlExchangeRateService'

    App\Service\ExchangeRate\ExchangeRateService:
        arguments:
            $client: '@http_client'
            $exchangerateCache: '@exchangerate.cache'

    App\Service\DividendService:
        arguments:
            $exchangeRateService: '@App\Service\ExchangeRate\WisselkoersNlExchangeRateService'
            #$exchangerateCache: '@exchangerate.cache'

    # Yahoo api does not work anymore
    App\Service\StockPriceService:
        arguments:
            $client: '@http_client'
            $stockCache: '@stock.cache'
            $exchangeRateService: '@App\Service\ExchangeRate\WisselkoersNlExchangeRateService'
        calls:
            - addService: ['App\Service\StockPrices\YahooFinanceService']
            - addService:
                  [
                      'App\Service\StockPrices\LondonService',
                      [
                          'SEMB',
                          'PNN',
                          'RB',
                          'BATS',
                          'SSHY',
                          'STHS',
                          'VWRL',
                          'VGOV',
                          'VUSC',
                      ],
                  ]
            - setDefault: ['App\Service\StockPrices\YahooFinanceService']

    App\Service\DividendDateService:
        arguments:
            $client: '@http_client'
        calls:
            # SeekingAlpha: They changed the api and is no longer available
            # - addService: ['App\Service\DividendDate\SeekingAlphaService']
            - addService:
                  [
                      'App\Service\DividendDate\FinancialModelingPrepService',
                      [],
                      '%dividend.financial_modeling_prep_api_key%',
                  ]
            - addService:
                  ['App\Service\DividendDate\NasdaqService', [], '', true]
            - addService:
                  [
                      'App\Service\DividendDate\ISharesService',
                      ['SEMB', 'INRG', 'IPRP', 'ISF', 'IUS3', 'IWDP'],
                  ]
            - addService:
                  [
                      'App\Service\DividendDate\VanguardService',
                      ['VMID', 'VJPN', 'VEUR', 'VAPX', 'VUSA', 'VGOV'],
                  ]
            - addService:
                  ['App\Service\DividendDate\PimcoService', ['STHS', 'SSHY']]
            - addService: ['\App\Service\DividendDate\NullService', ['DSM']]
            # Does not work anymore, so we use null service
            - addService: ['\App\Service\DividendDate\IncomeSharesService', ['AMZD', 'GOOO', 'METI', 'ONVD', 'APPL', 'COIY', 'QQQY','SPYY','TSLI'], '%env(INCOMESHARE_API_TOKEN)%']
            - addService:
                  [
                      '\App\Service\DividendDate\NullService',
                      ['QYLD', 'XY7D', 'EQQQ'],
                  ]
            #- setDefault: ['App\Service\DividendDate\SeekingAlphaService']
            - setDefault:
                  ['App\Service\DividendDate\FinancialModelingPrepService']
            #- setDefault: ['App\Service\DividendDate\NasdaqService']

    App\Service\Importer\ImportCsvService:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'

    App\Service\WeightedAverage:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'

    Doctrine\Migrations\Version\DbalMigrationFactory: ~
    App\Migrations\Factory\MigrationFactoryDecorator:
        decorates: Doctrine\Migrations\Version\DbalMigrationFactory
        arguments:
            [
                '@App\Migrations\Factory\MigrationFactoryDecorator.inner',
                '@service_container',
            ]

    App\Model\PortfolioModel:
        bind:
            $maxPerPage: '%app.max_per_page%'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    #App\EventListener\CreatedAtTimestamp:
    #    tags:
    #        - { name: doctrine.event_listener, event: prePersist }

    #App\EventListener\UpdatedAtTimestamp:
    #    tags:
    #        - { name: doctrine.event_listener, event: preUpdate }

    App\EventListener\AddUser:
        tags:
            - { name: doctrine.event_listener, event: prePersist }

    #Pagerfanta\Twig\Extension\PagerfantaExtension:
    #    tags: ['twig.extension']

    #Pagerfanta\Twig\Extension\PagerfantaRuntime:
    #    tags:
    #        - { name: 'twig.runtime' }

    #App\Serializer\AdminGroupsContextBuilder:
    #    decorates: 'api_platform.serializer.context_builder'
    #    arguments: ['@App\Serializer\AdminGroupsContextBuilder.inner']
