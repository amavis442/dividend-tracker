# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    .container.dumper.inline_factories: true
    documents_directory: "%kernel.project_dir%/public/uploads/documents"
    app.path.research_attachments: /uploads/documents
    app.dividend.tax: 0.15
    app.dividend.exchangerate: 1.19

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: "../src/"
        exclude:
            - "../src/DependencyInjection/"
            - "../src/Entity/"
            - "../src/Kernel.php"
            - "../src/Tests/"

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: "../src/Controller"
        tags: ["controller.service_arguments"]

    App\Service\FileUploader:
        arguments:
            $targetDirectory: "%documents_directory%"

    App\Service\PositionService:
        arguments:
            $entityManager: "@doctrine.orm.entity_manager"

    # Setup alias for the ExchangeRateInterface so autowire understand it
    App\Service\ExchangeRate\EuExchangeRateService: ~
    App\Service\ExchangeRate\ExchangeRateInterface: '@App\Service\ExchangeRate\EuExchangeRateService'

    App\Service\ExchangeRate\ExchangeRateService:
        arguments:
            $client: "@http_client"
            $exchangerateCache: "@exchangerate.cache"

    App\Service\StockPriceService:
        arguments:
            $client: "@http_client"
            $stockCache: "@stock.cache"
            $exchangeRateService: '@App\Service\ExchangeRate\ExchangeRateService'
        calls:
            - addService: ['App\Service\StockPrices\YahooFinanceService']
            - addService:
                  [
                      'App\Service\StockPrices\LondonService',
                      [
                          "SEMB",
                          "PNN",
                          "RB",
                          "BATS",
                          "SSHY",
                          "STHS",
                          "VWRL",
                          "VGOV",
                          "VUSC",
                      ],
                  ]
            - setDefault: ['App\Service\StockPrices\YahooFinanceService']

    App\Service\DividendDateService:
        arguments:
            $client: "@http_client"
        calls:
            - addService: ['App\Service\DividendDate\SeekingAlphaService']
            - addService:
                  [
                      'App\Service\DividendDate\ISharesService',
                      ["SEMB", "INRG", "IPRP", "ISF", "IUS3", "IWDP"],
                  ]
            - addService:
                  [
                      'App\Service\DividendDate\VanguardService',
                      ["VMID", "VJPN", "VEUR", "VAPX", "VUSA", "VGOV"],
                  ]
            - addService:
                  ['App\Service\DividendDate\PimcoService', ["STHS", "SSHY"]]
            - addService: ['\App\Service\DividendDate\NullService', ["DSM"]]
            - setDefault: ['App\Service\DividendDate\SeekingAlphaService']

    App\Service\ImportCsvService:
        arguments:
            $entityManager: "@doctrine.orm.entity_manager"

    App\Service\WeightedAverage:
        arguments:
            $entityManager: "@doctrine.orm.entity_manager"

    Doctrine\Migrations\Version\DbalMigrationFactory: ~
    App\Migrations\Factory\MigrationFactoryDecorator:
        decorates: Doctrine\Migrations\Version\DbalMigrationFactory
        arguments:
            [
                '@App\Migrations\Factory\MigrationFactoryDecorator.inner',
                "@service_container",
            ]

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\CreatedAtTimestamp:
        tags:
            - { name: doctrine.event_listener, event: prePersist }

    App\EventListener\UpdatedAtTimestamp:
        tags:
            - { name: doctrine.event_listener, event: preUpdate }

    App\EventListener\AddUser:
        tags:
            - { name: doctrine.event_listener, event: prePersist }

    on_request_listener:
        class: App\EventListener\OnRequestListener
        arguments: ["@doctrine.orm.entity_manager", "@security.token_storage"]
        tags:
            - {
                  name: kernel.event_listener,
                  event: kernel.request,
                  method: onKernelRequest,
              }
