# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
30 15 * * 1-5 /var/www/prod/dividend/current/bin/console app:dividenddate > /dev/null 2>&1
15 01 1 * * /var/www/prod/dividend/current/bin/console app:dividend-tracker > /dev/null 2>&1

# Trading 212 pies
00 23 * * 1-5 /var/www/prod/dividend/current/bin/console trading212:get-pies > /dev/null 2>&1
03 23 * * 1-5 /var/www/prod/dividend/current/bin/console trading212:get-pie [ID] > /dev/null 2>&1


# NVM should be sourced here!
# otherwise `$(which node)` in `script.sh` won't work!
#*/1 * * * *     (. ~/scripts/cronjob.env.sh; ~/scripts/script.sh >> ~/scripts/logs/file.log; )
30 14 * * 1-5  ~/scripts/globalx-sp500.sh > dev/null 2>&1
45 14 * * 1-5  ~/scripts/globalx-nasdaq.sh > /dev/null 2>&1

30 16 * * 1-5 /var/www/prod/dividend/current/bin/console globalx:import XY7D ~/globalx/sp500.html
40 16 * * 1-5 /var/www/prod/dividend/current/bin/console globalx:import QYLD ~/globalx/nasdaq.html
